{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/audero-sticky.js","src/helpers/style.js","src/helpers/event-emitter.js","src/helpers/store.js","node_modules/classlist-polyfill/src/index.js"],"names":["isPassiveEventListenerSupported","isSupported","options","Object","defineProperty","get","window","addEventListener","ex","getStickyMargins","sticky","elementStyle","stickyMargins","element","classList","add","settings","activeClass","getComputedStyle","marginBottom","marginTop","remove","getComputedZIndex","position","style","zIndex","Number","isNaN","undefined","getZIndex","selector","stickyElements","slice","call","document","querySelectorAll","indexOf","convertNumbersToPixels","propertiesHash","object","property","cleanUp","data","store","getData","_style2","resetStyleProperties","properties","concat","placeholder","parentNode","removeChild","calculateBoundaries","boundaries","start","end","parentStyle","getBoundingClientRect","top","parseFloat","bottom","pageYOffset","updatePlaceholderStyle","startPosition","copyStyleProperties","onScroll","startSticky","setData","insertBefore","_eventEmitter2","fireEvent","endSticky","getBoundaries","isSticking","stickToTop","isAdded","height","gap","isInRange","distanceFromSide","stickToBottom","windowBottom","innerHeight","onResize","destroy","init","scroll","bindEvents","handlers","scrollOptions","resize","unbindEvents","removeEventListener","require","_eventEmitter","_store","_style","defaults","passive","namespace","_store2","Sticky","arguments","length","_classCallCheck","this","_extends","Error","createElement","nodeName","visibility","removeData","prefixes","testStyle","forEach","prefix","cssText","Style","blueprintStyle","keys","EventEmitter","eventName","customEvent","createEvent","initEvent","getOwnPropertyNames","TypeError","dispatchEvent","Store","value","self","createElementNS","testElement","contains","createMethod","method","original","DOMTokenList","prototype","token","i","len","toggle","_toggle","force","view","classListProp","protoProp","elemCtrProto","Element","objCtr","strTrim","String","trim","replace","arrIndexOf","Array","item","DOMEx","type","message","name","code","DOMException","checkTokenAndGetIndex","test","ClassList","elem","trimmedClasses","getAttribute","classes","split","push","_updateClassName","setAttribute","toString","classListProto","classListGetter","tokens","l","updated","index","splice","result","join","classListPropDesc","enumerable","configurable","number","__defineGetter__"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","import 'classlist-polyfill';\nimport EventEmitter from './helpers/event-emitter';\nimport Store from './helpers/store';\nimport Style from './helpers/style';\n\n/**\n * @typedef SettingsHash\n * @type {Object}\n * @property {string} [selector='.sticky'] The selector used to identify the\n * elements processed by this library\n * @property {string} [activeClass='sticky-active'] The class name added when an\n * element starts sticking\n */\n\n/**\n * The default values for settings available\n *\n * @type {SettingsHash}\n */\nconst defaults = {\n   selector: '.sticky',\n   activeClass: 'sticky--active'\n};\n\n/**\n * The settings to use when adding the event handler for the scroll event\n *\n * @type {Object}\n */\nconst scrollOptions = {\n   passive: true\n};\n\n/**\n * The properties needed by the placeholder element to have the\n * occupy the same space as the element when in its original position\n *\n * @type {string[]}\n */\nconst properties = [\n   'width',\n   'height',\n   'left',\n   'marginLeft',\n   'marginRight',\n   'zIndex'\n];\n\n/**\n * The namespace used to store data related to the library\n * on the elements of a page\n *\n * @type {string}\n */\nconst namespace = 'auderosticky';\n\n/**\n * The store used to manage the data stored\n *\n * @type {store}\n */\nconst store = new Store(namespace);\n\n/**\n * Tests if passive event listeners are supported\n *\n * @return {boolean}\n */\nfunction isPassiveEventListenerSupported() {\n   let isSupported = false;\n\n   try {\n      const options = Object.defineProperty({}, 'passive', {\n         get() {\n            isSupported = true;\n         }\n      });\n\n      window.addEventListener('', null, options);\n   } catch(ex) {}\n\n   return isSupported;\n}\n\n/**\n * Calculates the top and bottom margins of the element that has to stick\n * at the moment it'll stick\n *\n * @param {Sticky} sticky An instance of a Sticky object\n *\n * @returns {Object}\n */\nfunction getStickyMargins(sticky) {\n   // Knowing the top and bottom margins at the time the element\n   // will stick is important because the specifications require\n   // to consider these values when calculating the boundaries\n   // in which the element sticks.\n   let elementStyle, stickyMargins;\n\n   sticky.element.classList.add(sticky.settings.activeClass);\n   elementStyle = window.getComputedStyle(sticky.element);\n   stickyMargins = {\n      marginBottom: elementStyle.marginBottom,\n      marginTop: elementStyle.marginTop\n   };\n   sticky.element.classList.remove(sticky.settings.activeClass);\n\n   return stickyMargins;\n}\n\n/**\n * Returns the z-index value of the element if one is defined;\n * <code>undefined</code> otherwise\n *\n * @param {HTMLElement} element The element whose z-index value must be calculated\n *\n * @return {number|undefined}\n */\nfunction getComputedZIndex(element) {\n   const position = element.style.position;\n\n   // Set the position to relative to address a bug in WebKit browsers (issue #15562)\n   // https://bugs.webkit.org/show_bug.cgi?id=15562\n   element.style.position = 'relative';\n\n   const zIndex = Number(window.getComputedStyle(element).zIndex);\n\n   element.style.position = position;\n\n   return !isNaN(zIndex) ? zIndex : undefined;\n}\n\n/**\n * Returns the z-index value of the element if one is defined.\n * Otherwise, it calculates the z-index value of an element based\n * on its position in the DOM, among other elements selected\n * by the CSS selector provided\n *\n * @param {HTMLElement} element The element whose z-index value must be calculated\n * @param {string} selector The CSS selector to use\n *\n * @return {number}\n */\nfunction getZIndex(element, selector) {\n   const zIndex = getComputedZIndex(element);\n\n   if (zIndex !== undefined) {\n      return zIndex;\n   }\n\n   const stickyElements = [].slice.call(document.querySelectorAll(selector));\n\n   return stickyElements.indexOf(element) + 1;\n}\n\n/**\n * Turns the unitless values of the object provided in pixels\n *\n * @param {Object} propertiesHash The object whose values will be converted\n *\n * @return {Object}\n */\nfunction convertNumbersToPixels(propertiesHash) {\n   const object = {};\n\n   for(const property in propertiesHash) {\n      object[property] = `${propertiesHash[property]}px`;\n   }\n\n   return object;\n}\n\n/**\n * Cleans up allocated resources and effects\n *\n * @param {Sticky} sticky An instance of a Sticky object\n */\nfunction cleanUp(sticky) {\n   const data = store.getData(sticky.element);\n\n   Style.resetStyleProperties(\n      sticky.element.style,\n      properties.concat([\n         'marginTop',\n         'marginBottom',\n         'top',\n         'bottom'\n      ])\n   );\n   sticky.element.style.position = data.position;\n\n   if (data.placeholder && data.placeholder.parentNode) {\n      data.placeholder.parentNode.removeChild(data.placeholder);\n   }\n}\n\n/**\n * Calculates the boundaries of the sticky element, that is at what\n * positions it has to start and end to stick.\n *\n * @param {HTMLElement} element The element based on which the boundaries are calculated\n * @param {Object} stickyMargins An object containing additional margins to consider\n * in the calculation\n *\n * @return {Object}\n */\nfunction calculateBoundaries(element, stickyMargins) {\n   const boundaries = {\n      start: 0,\n      end: 0\n   };\n   const elementStyle = window.getComputedStyle(element);\n   const parentStyle = element.parentNode.getBoundingClientRect();\n\n   // If the value of the \"top\" property is defined, in which case it has\n   // a value different from \"auto\", the element will stick on the top.\n   if (elementStyle.top !== 'auto') {\n      boundaries.start = element.getBoundingClientRect().top - parseFloat(elementStyle.top);\n      boundaries.end = parentStyle.bottom - (parseFloat(stickyMargins.marginBottom) || 0);\n   } else {\n      boundaries.start = element.getBoundingClientRect().bottom + parseFloat(elementStyle.bottom);\n      boundaries.end = parentStyle.top + (parseFloat(stickyMargins.marginTop) || 0);\n   }\n\n   // Normalize the start and the limit position of the element.\n   // This is needed when on the load of a page the position\n   // isn't set at the top of the page.\n   boundaries.start += window.pageYOffset;\n   boundaries.end += window.pageYOffset;\n\n   return boundaries;\n}\n\n/**\n * Updates the style of the placeholder element based on the current\n * values of the sticky element\n *\n * @param {Sticky} sticky An instance of a Sticky object\n */\nfunction updatePlaceholderStyle(sticky) {\n   const startPosition = sticky.element.getBoundingClientRect();\n   const placeholder = store.getData(sticky.element, 'placeholder');\n\n   Style.copyStyleProperties(\n      placeholder.style,\n      window.getComputedStyle(sticky.element),\n      [\n         'top',\n         'bottom',\n         'marginTop',\n         'marginBottom',\n         'marginLeft',\n         'marginRight'\n      ]\n   );\n   Style.copyStyleProperties(\n      placeholder.style,\n      convertNumbersToPixels(startPosition),\n      [\n         'width',\n         'height',\n         'left'\n      ]\n   );\n}\n\n/**\n * Returns the function to use as the event handler for\n * the <code>scroll</code> event\n *\n * @param {Sticky} sticky An instance of a Sticky object\n *\n * @return {Function}\n */\nfunction onScroll(sticky) {\n   const stickyMargins = getStickyMargins(sticky);\n   const elementStyle = window.getComputedStyle(sticky.element);\n   const distanceFromSide = elementStyle.top !== 'auto' ?\n      parseFloat(elementStyle.top) :\n      parseFloat(elementStyle.bottom);\n\n   function startSticky() {\n      const data = store.getData(sticky.element);\n\n      updatePlaceholderStyle(sticky);\n      data.position = sticky.element.style.position;\n      store.setData(sticky.element, data);\n      Style.copyStyleProperties(\n         sticky.element.style,\n         {\n            position: 'fixed'\n         }\n      );\n      Style.copyStyleProperties(sticky.element.style, data.placeholder.style, properties);\n      sticky.element.parentNode.insertBefore(data.placeholder, sticky.element);\n      EventEmitter.fireEvent('stickystart', sticky.element);\n      sticky.element.classList.add(sticky.settings.activeClass);\n   }\n\n   function endSticky() {\n      cleanUp(sticky);\n      EventEmitter.fireEvent('stickyend', sticky.element);\n      sticky.element.classList.remove(sticky.settings.activeClass);\n   }\n\n   function getBoundaries(isSticking) {\n      const placeholder = store.getData(sticky.element).placeholder;\n\n      // The boundaries are calculated based on the element\n      // itself if it's not sticking;\n      // otherwise the placeholder is used.\n      return isSticking ?\n         calculateBoundaries(placeholder, stickyMargins) :\n         calculateBoundaries(sticky.element, stickyMargins);\n   }\n\n   function stickToTop() {\n      const isAdded = !!store\n         .getData(sticky.element)\n         .placeholder\n         .parentNode;\n      const boundaries = getBoundaries(isAdded);\n      const height = parseFloat(window.getComputedStyle(sticky.element).height) || 0;\n      const gap = boundaries.end - height - window.pageYOffset;\n      const isInRange = window.pageYOffset >= boundaries.start && window.pageYOffset <= boundaries.end;\n\n      if (isInRange) {\n         if (!isAdded) {\n            startSticky();\n         }\n\n         sticky.element.style.top = gap - distanceFromSide >= 0 ? '' : `${gap}px`;\n      } else if (isAdded) {\n         endSticky();\n      }\n   }\n\n   function stickToBottom() {\n      const isAdded = !!store\n         .getData(sticky.element)\n         .placeholder\n         .parentNode;\n      const boundaries = getBoundaries(isAdded);\n      const height = parseFloat(window.getComputedStyle(sticky.element).height) || 0;\n      const windowBottom = window.pageYOffset + window.innerHeight;\n      const gap = boundaries.end + height - windowBottom;\n      const isInRange = windowBottom <= boundaries.start && windowBottom >= boundaries.end;\n\n      if (isInRange) {\n         if (!isAdded) {\n            startSticky();\n         }\n\n         sticky.element.style.bottom = gap + distanceFromSide <= 0 ? '' : `${-gap}px`;\n      } else if (isAdded) {\n         endSticky();\n      }\n   }\n\n   return elementStyle.top !== 'auto' ? stickToTop : stickToBottom;\n}\n\n/**\n * Returns the function to use as the event handler for\n * the <code>resize</code> event\n *\n * @param {Sticky} sticky An instance of a Sticky object\n *\n * @return {Function}\n */\nfunction onResize(sticky) {\n   return () => {\n      sticky.destroy();\n      sticky.init();\n      store.getData(sticky.element, 'handlers').scroll();\n   };\n}\n\n/**\n * Binds the events for the sticky object provided\n *\n * @param {Sticky} sticky An instance of a Sticky object\n */\nfunction bindEvents(sticky) {\n   const handlers = store.getData(sticky.element, 'handlers');\n\n   window.addEventListener('load', handlers.scroll);\n   window.addEventListener('scroll', handlers.scroll, isPassiveEventListenerSupported() ? scrollOptions : false);\n   window.addEventListener('resize', handlers.resize);\n}\n\n/**\n * Unbinds the events for the sticky object provided\n *\n * @param {Sticky} sticky An instance of a Sticky object\n */\nfunction unbindEvents(sticky) {\n   const handlers = store.getData(sticky.element, 'handlers');\n\n   window.removeEventListener('load', handlers.scroll);\n   window.removeEventListener('scroll', handlers.scroll, isPassiveEventListenerSupported() ? scrollOptions : false);\n   window.removeEventListener('resize', handlers.resize);\n}\n\nexport\n default class Sticky {\n   /**\n    * Creates a new Sticky object\n    *\n    * @param {HTMLElement} element The element to render as sticky\n    * @param {SettingsHash} [options={}] An object of options to customize the library\n    *\n    * @constructor\n    */\n   constructor(element, options = {}) {\n      this.element = element;\n      this.settings = Object.assign({}, defaults, options);\n   }\n\n   /**\n    * Tests if the <code>sticky</code> value for the <code>position</code>\n    * property is supported\n    *\n    * @return {boolean}\n    */\n   static isFeatureSupported() {\n      const prefixes = [\n         'ms',\n         'webkit'\n      ];\n      let testStyle = 'position:sticky;';\n      const element = document.createElement('div');\n\n      prefixes.forEach(prefix => {\n         testStyle += `position:-${prefix}-sticky;`;\n      });\n      element.style.cssText = testStyle;\n\n      return !!element.style.position;\n   }\n\n   /**\n    * Autoinitializes all the elements of the page matched by the selector provided\n    * in the options or the default one if no selector is provided\n    *\n    * @param {SettingsHash} [options] An object of options to customize the library\n    */\n   static autoInit(options = {}) {\n      options = Object.assign({}, defaults, options);\n\n      [].forEach.call(\n         document.querySelectorAll(options.selector),\n         element => {\n            const sticky = new Sticky(element, options);\n\n            sticky.init();\n         }\n      );\n   }\n\n   /**\n    * Initializes the library\n    */\n   init() {\n      if (store.getData(this.element)) {\n         throw new Error('This element has already been initialized');\n      }\n\n      const placeholder = document.createElement(this.element.nodeName);\n\n      store.setData(this.element, {\n         placeholder: placeholder,\n         handlers: {\n            scroll: onScroll(this),\n            resize: onResize(this)\n         },\n         position: this.element.style.position\n      });\n\n      Style.copyStyleProperties(\n         placeholder.style,\n         {\n            visibility: 'hidden',\n            zIndex: getZIndex(this.element, this.settings.selector)\n         }\n      );\n\n      updatePlaceholderStyle(this);\n      bindEvents(this);\n\n      // Execute the scroll handler to position the element if it\n      // should stick when the page is loaded\n      store.getData(this.element, 'handlers').scroll();\n   }\n\n   /**\n    * Removes the effects of the library and clean up all the resources\n    */\n   destroy() {\n      cleanUp(this);\n      unbindEvents(this);\n      store.removeData(this.element);\n   }\n}","/**\n * The class representing an object to manage the style of an element\n *\n * @class\n */\nexport\n default class Style {\n   /**\n    * Resets the style of the properties specifies\n    *\n    * @param {CSSStyleDeclaration} style The object whose properties values are reset\n    * @param {string[]} properties The properties to reset\n    */\n   static resetStyleProperties(style, properties) {\n      properties.forEach(property => {\n         style[property] = '';\n      });\n   }\n\n   /**\n    * Copies the properties' values of a CSSStyleDeclaration object into another.\n    * If an array of properties is specified, only those properties' values are copied\n    *\n    * @param {CSSStyleDeclaration} style The object in which to copy the values\n    * @param {CSSStyleDeclaration} blueprintStyle The object whose values are copied\n    * @param {string[]} [properties] The properties to copy\n    */\n   static copyStyleProperties(style, blueprintStyle, properties = Object.keys(blueprintStyle)) {\n      properties.forEach(property => {\n         style[property] = blueprintStyle[property];\n      });\n   }\n}\n","/**\n * The class representing an event emitter\n *\n * @class\n */\nexport\n   default class EventEmitter {\n   /**\n    * Namespaces an event\n    *\n    * @param {string} eventName The event name\n    *\n    * @return {string}\n    */\n   static namespaceEvent(eventName) {\n      return `${EventEmitter.namespace}.${eventName}`;\n   }\n\n   /**\n    * Fires an event\n    *\n    * @param {string} eventName The name of the event\n    * @param {HTMLElement|Document} element The element on which the event is dispatched\n    * @param {Object} [properties={}] A set of key-values to assign to the event\n    */\n   static fireEvent(eventName, element, properties = {}) {\n      let customEvent = document.createEvent('Event');\n\n      customEvent.initEvent(eventName, true, true);\n\n      Object\n         .getOwnPropertyNames(properties)\n         .forEach(property => {\n            customEvent[property] = properties[property];\n\n            // Internet Explorer and some older versions of other browsers don't throw\n            // a TypeError when trying to assign a value to a read-only property.\n            // To keep the behavior consistent, I check that the value is actually\n            // changed. If the value is not changed, the expected TypeError is thrown.\n            if (customEvent[property] !== properties[property]) {\n               throw new TypeError('Cannot set a property which has only a getter');\n            }\n         });\n\n      element.dispatchEvent(customEvent);\n   }\n}","/**\n * The class representing an object to store data\n *\n * @class\n */\nexport\n default class Store {\n\n   /**\n    * Creates a new Store object\n    *\n    * @param {string} namespace The namespace to use to store the data\n    */\n   constructor(namespace) {\n      this.namespace = namespace;\n   }\n\n   /**\n    * Gets the value of the required property for a given object.\n    * If <code>property</code> is not provided, an object containing all\n    * the data set is returned.\n    *\n    * @param {Object} object The object whose value is returned\n    * @param {string} [property] The name of the property whose value is returned\n    *\n    * @return {*}\n    */\n   getData(object, property) {\n      return object[this.namespace] && property ?\n         object[this.namespace][property] :\n         object[this.namespace];\n   }\n\n   /**\n    * Sets the value of the required property for a given object.\n    * If <code>property</code> is an object, all its key-value pairs are set.\n    *\n    * @param {Object} object The object whose value is set\n    * @param {*} [value] The value to set\n    *\n    * @return Store\n    */\n   setData(object, value) {\n      if (!object[this.namespace]) {\n         object[this.namespace] = {};\n      }\n\n      object[this.namespace] = value;\n\n      return this;\n   }\n\n   /**\n    * Removes all the data from a given object\n    *\n    * @param {Object} object The object whose data are removed\n    *\n    * @return Store\n    */\n   removeData(object) {\n      delete object[this.namespace];\n\n      return this;\n   }\n}","/*\n * classList.js: Cross-browser full element.classList implementation.\n * 2014-07-23\n *\n * By Eli Grey, http://eligrey.com\n * Public Domain.\n * NO WARRANTY EXPRESSED OR IMPLIED. USE AT YOUR OWN RISK.\n */\n\n/*global self, document, DOMException */\n\n/*! @source http://purl.eligrey.com/github/classList.js/blob/master/classList.js*/\n\n/* Copied from MDN:\n * https://developer.mozilla.org/en-US/docs/Web/API/Element/classList\n */\n\nif (\"document\" in window.self) {\n\n  // Full polyfill for browsers with no classList support\n  // Including IE < Edge missing SVGElement.classList\n  if (!(\"classList\" in document.createElement(\"_\"))\n    || document.createElementNS && !(\"classList\" in document.createElementNS(\"http://www.w3.org/2000/svg\",\"g\"))) {\n\n  (function (view) {\n\n    \"use strict\";\n\n    if (!('Element' in view)) return;\n\n    var\n        classListProp = \"classList\"\n      , protoProp = \"prototype\"\n      , elemCtrProto = view.Element[protoProp]\n      , objCtr = Object\n      , strTrim = String[protoProp].trim || function () {\n        return this.replace(/^\\s+|\\s+$/g, \"\");\n      }\n      , arrIndexOf = Array[protoProp].indexOf || function (item) {\n        var\n            i = 0\n          , len = this.length\n        ;\n        for (; i < len; i++) {\n          if (i in this && this[i] === item) {\n            return i;\n          }\n        }\n        return -1;\n      }\n      // Vendors: please allow content code to instantiate DOMExceptions\n      , DOMEx = function (type, message) {\n        this.name = type;\n        this.code = DOMException[type];\n        this.message = message;\n      }\n      , checkTokenAndGetIndex = function (classList, token) {\n        if (token === \"\") {\n          throw new DOMEx(\n              \"SYNTAX_ERR\"\n            , \"An invalid or illegal string was specified\"\n          );\n        }\n        if (/\\s/.test(token)) {\n          throw new DOMEx(\n              \"INVALID_CHARACTER_ERR\"\n            , \"String contains an invalid character\"\n          );\n        }\n        return arrIndexOf.call(classList, token);\n      }\n      , ClassList = function (elem) {\n        var\n            trimmedClasses = strTrim.call(elem.getAttribute(\"class\") || \"\")\n          , classes = trimmedClasses ? trimmedClasses.split(/\\s+/) : []\n          , i = 0\n          , len = classes.length\n        ;\n        for (; i < len; i++) {\n          this.push(classes[i]);\n        }\n        this._updateClassName = function () {\n          elem.setAttribute(\"class\", this.toString());\n        };\n      }\n      , classListProto = ClassList[protoProp] = []\n      , classListGetter = function () {\n        return new ClassList(this);\n      }\n    ;\n    // Most DOMException implementations don't allow calling DOMException's toString()\n    // on non-DOMExceptions. Error's toString() is sufficient here.\n    DOMEx[protoProp] = Error[protoProp];\n    classListProto.item = function (i) {\n      return this[i] || null;\n    };\n    classListProto.contains = function (token) {\n      token += \"\";\n      return checkTokenAndGetIndex(this, token) !== -1;\n    };\n    classListProto.add = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n      ;\n      do {\n        token = tokens[i] + \"\";\n        if (checkTokenAndGetIndex(this, token) === -1) {\n          this.push(token);\n          updated = true;\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.remove = function () {\n      var\n          tokens = arguments\n        , i = 0\n        , l = tokens.length\n        , token\n        , updated = false\n        , index\n      ;\n      do {\n        token = tokens[i] + \"\";\n        index = checkTokenAndGetIndex(this, token);\n        while (index !== -1) {\n          this.splice(index, 1);\n          updated = true;\n          index = checkTokenAndGetIndex(this, token);\n        }\n      }\n      while (++i < l);\n\n      if (updated) {\n        this._updateClassName();\n      }\n    };\n    classListProto.toggle = function (token, force) {\n      token += \"\";\n\n      var\n          result = this.contains(token)\n        , method = result ?\n          force !== true && \"remove\"\n        :\n          force !== false && \"add\"\n      ;\n\n      if (method) {\n        this[method](token);\n      }\n\n      if (force === true || force === false) {\n        return force;\n      } else {\n        return !result;\n      }\n    };\n    classListProto.toString = function () {\n      return this.join(\" \");\n    };\n\n    if (objCtr.defineProperty) {\n      var classListPropDesc = {\n          get: classListGetter\n        , enumerable: true\n        , configurable: true\n      };\n      try {\n        objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n      } catch (ex) { // IE 8 doesn't support enumerable:true\n        if (ex.number === -0x7FF5EC54) {\n          classListPropDesc.enumerable = false;\n          objCtr.defineProperty(elemCtrProto, classListProp, classListPropDesc);\n        }\n      }\n    } else if (objCtr[protoProp].__defineGetter__) {\n      elemCtrProto.__defineGetter__(classListProp, classListGetter);\n    }\n\n    }(window.self));\n\n    } else {\n    // There is full or partial native classList support, so just check if we need\n    // to normalize the add/remove and toggle APIs.\n\n    (function () {\n      \"use strict\";\n\n      var testElement = document.createElement(\"_\");\n\n      testElement.classList.add(\"c1\", \"c2\");\n\n      // Polyfill for IE 10/11 and Firefox <26, where classList.add and\n      // classList.remove exist but support only one argument at a time.\n      if (!testElement.classList.contains(\"c2\")) {\n        var createMethod = function(method) {\n          var original = DOMTokenList.prototype[method];\n\n          DOMTokenList.prototype[method] = function(token) {\n            var i, len = arguments.length;\n\n            for (i = 0; i < len; i++) {\n              token = arguments[i];\n              original.call(this, token);\n            }\n          };\n        };\n        createMethod('add');\n        createMethod('remove');\n      }\n\n      testElement.classList.toggle(\"c3\", false);\n\n      // Polyfill for IE 10 and Firefox <24, where classList.toggle does not\n      // support the second argument.\n      if (testElement.classList.contains(\"c3\")) {\n        var _toggle = DOMTokenList.prototype.toggle;\n\n        DOMTokenList.prototype.toggle = function(token, force) {\n          if (1 in arguments && !this.contains(token) === !force) {\n            return force;\n          } else {\n            return _toggle.call(this, token);\n          }\n        };\n\n      }\n\n      testElement = null;\n    }());\n  }\n}\n"]}